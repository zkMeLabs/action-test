# name: goreleaser

# on:
#   push:
#     tags:
#       - "v*.*.*"
# permissions:
#   contents: write
# jobs:
#   goreleaser:
#     runs-on: ubuntu-latest
#     environment: release
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           submodules: true
#       - name: Set up Go
#         uses: actions/setup-go@v5
#         with:
#           go-version: "1.20"
#           check-latest: true
#       - name: release dry run
#         run: make release-dry-run
#       - name: setup release environment
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: |-
#           echo 'GITHUB_TOKEN=${{secrets.GITHUB_TOKEN}}' > .release-env
#       - name: release publish
#         run: make release
name: goreleaser
on:
  push:
    # run only against tags
    tags:
      - "v*.*.*"

permissions:
  contents: write
  # packages: write
  # issues: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.20"
      # More assembly might be required: Docker logins, GPG, etc.
      # It all depends on your needs.
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: v1.20
          args: release --clean --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
